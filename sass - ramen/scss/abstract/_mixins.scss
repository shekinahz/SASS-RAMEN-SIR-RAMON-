@use 'colors' as *; 

@function set-color($color) {
    @if (lightness($color) > 40) {
      @return $clr-dark;
    } @else {
      @return $clr-light;
    }
  }
  

// $primary-color: hsl(210, 100%, 20%);
// $primary-color: hsl(210, 100%, 60%);
// .btn {
//   background-color: $primary-color;
//   color: 
// }


@mixin imgCover($ht:1px, $wd:100%){
    height: $ht;
    width:  $wd;
    object-fit: cover;
}

@mixin mediaQuery($width:$sm) {
    @media (min-width:$width) {
        @content;
    }
}

@mixin grid($cols: 1, $gap:1rem) {
    display: grid;
    grid-template-columns: repeat($cols, 1fr);
    grid-gap: $gap;
}

@mixin unevenGrid($val, $gap:1rem) {
    display: grid;
    grid-template-columns: $val;
    grid-gap: $gap;
}



@mixin absolute ($top:0,$right:0, $bottom:0,$left:0) {
    position: absolute;
    top: $top;
    left: $left;
    bottom: $bottom;
    right: $right;   
}

@mixin flex($justify:flex-start, $align: flex-start ) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
} 
